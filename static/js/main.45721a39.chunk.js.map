{"version":3,"sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/FeedBackOptions/FeedBackOptions.styled.jsx","components/FeedBackOptions/FeedBackOptions.jsx","components/Statistics/Statistics.styled.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["MySection","styled","section","Section","title","children","className","MyP","p","Notification","notice","Btn","button","FeedBackOpt","onFeedback","btnNames","reset","map","btn","type","name","onClick","MyStatistics","div","Statistics","good","neutral","bad","total","positive","App","useState","setGood","setNeutral","setBad","totalAmount","FeedBackOptions","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PACaA,EAAYC,IAAOC,QAAV,2I,OCePC,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,eAACL,EAAD,WACE,oBAAIM,UAAU,QAAd,SAAuBF,IACtBC,MCLME,EAAMN,IAAOO,EAAV,yNCODC,EANM,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACnB,OACI,cAACH,EAAD,UAAMG,KCHDC,EAAMV,IAAOW,OAAV,oVC2BDC,EAzBK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAWC,EAAoB,EAApBA,SAAoB,EAAXC,MACtC,OACI,mCAEKD,EAASE,KAAI,SAAAC,GAAG,OACb,cAACP,EAAD,CAEIQ,KAAK,SACLC,KAAMF,EACNG,QAAU,kBAAMP,EAAYI,IAJhC,SAMKA,GALIA,SCRZI,EAAerB,IAAOsB,IAAV,qLCcVC,EAZI,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,KAAKC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SAC1C,OACI,eAACP,EAAD,WACI,0CAAcG,EAAd,OACA,6CAAiBC,EAAjB,OACA,yCAAaC,EAAb,OACA,2CAAeC,EAAf,OACA,8CAAkBC,EAAlB,YCkDGC,MArDf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACNN,EADM,KACAO,EADA,OAEiBD,mBAAS,GAF1B,mBAENL,EAFM,KAEGO,EAFH,OAGSF,mBAAS,GAHlB,mBAGNJ,EAHM,KAGDO,EAHC,KAuBb,SAASC,IACP,OAAOV,EAAOC,EAAUC,EAO1B,OACE,qCACE,cAAC,EAAD,CAASvB,MAAM,wBAAf,SACE,cAACgC,EAAD,CAAiBtB,WA7BD,SAACM,GACrB,OAAQA,GACN,IAAK,OACHY,GAAQ,SAACP,GAAD,OAAUA,EAAO,KACzB,MACF,IAAK,UACHQ,GAAW,SAACP,GAAD,OAAaA,EAAU,KAClC,MACF,IAAK,MACHQ,GAAO,SAACP,GAAD,OAASA,EAAM,KACtB,MACF,QACE,SAiB4CZ,SAb9B,CAAC,OAAD,qBAehB,cAAC,EAAD,CAASX,MAAO,aAAhB,SACG+B,IACC,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,IACPN,SAfDQ,KAAKC,MAAOb,EAAOU,IAAiB,OAkBrC,cAAC,EAAD,CAAczB,OAAO,4BChD/B6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.45721a39.chunk.js","sourcesContent":["import styled from '@emotion/styled'\nexport const MySection = styled.section`\n\n\n padding: 20px;\n \n  .title {\n    \n  font-size: 24px;\n  line-height: 1.14;\n  margin-bottom: 20px;\n}\n`","import PropTypes from 'prop-types';\nimport { MySection } from './Section.styled';\nconst Section = ({ title, children }) => {\n  return (\n    <MySection>\n      <h2 className=\"title\">{title}</h2>\n      {children}\n    </MySection>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;","import styled from \"@emotion/styled\";\r\nexport const MyP = styled.p`\r\ntext-align: center;\r\nbackground-color: ;\r\nfont-size: 30px;\r\ncolor: red;\r\nfont-family: sans-serif\t;\r\nfont-family:fantasy;\r\ntext-shadow: 1px 1px 1px black,\r\n             2px 2px 1px black;\r\n`","import React from 'react';\nimport {MyP} from './Notification.styled'\nconst Notification = ({notice}) => {\n    return (\n        <MyP>{notice}</MyP>\n    );\n}\n\nexport default Notification;","import styled from '@emotion/styled'\nexport const Btn = styled.button`\n\n width:100%; \n\n  text-align: center;\n  color: dimgrey;\n  padding: 10px 20px;\n  background-color: snow;\n  border: 2px solid aqua;\n  border-radius: 5px;\n  box-shadow: 2px 3px 4px rgba(0, 0, 0, 0.6);\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n  &:hover {\n    background-color: #69ffd2;\n   \n` ","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Btn} from './FeedBackOptions.styled'\nconst FeedBackOpt = ({onFeedback,btnNames,reset}) => {\n    return (\n        <>\n        \n            {btnNames.map(btn => (\n                <Btn\n                    key={btn}\n                    type=\"button\"\n                    name={btn}\n                    onClick={ () => onFeedback (btn)}\n                >\n                    {btn}\n                </Btn>\n            ))}\n    \n            \n        </>\n    );\n}\n\nFeedBackOpt.propTypes = {\n    onLeaveFeedback: PropTypes.func.isRequired,\n    btnNames:PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n}\n\nexport default FeedBackOpt;","import styled from '@emotion/styled'\nexport const MyStatistics = styled.div`\n\n    span{\n        font-family: \"Roboto\", \"sans-serif\";\n  font-size: 18px;\n  line-height: 1.14;\n  color: dimgrey;\n  margin-bottom: 10px;\n\n    }\n`","import React from 'react';\nimport { MyStatistics } from './Statistics.styled';\nimport PropTypes from 'prop-types'\nconst Statistics = ({good,neutral, bad, total,positive}) => {\n    return (\n        <MyStatistics>\n            <span>Good: { good} </span>\n            <span>Neutral: { neutral} </span>\n            <span>Bad: { bad} </span>\n            <span>Total: { total} </span>\n            <span>Positive: { positive} %</span>\n        </MyStatistics>\n    );\n}\n\nexport default Statistics;\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positive: PropTypes.number.isRequired}","// import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Section from \"./components/Section/Section.jsx\";\nimport Notification from \"./components/Notification/Notification\";\nimport FeedBackOptions from \"./components/FeedBackOptions/FeedBackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onHandleClick = (name) => {\n    switch (name) {\n      case \"good\":\n        setGood((good) => good + 1);\n        break;\n      case \"neutral\":\n        setNeutral((neutral) => neutral + 1);\n        break;\n      case \"bad\":\n        setBad((bad) => bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const arrFeedback = [`good`, `neutral`, `bad`];\n\n  function totalAmount() {\n    return good + neutral + bad;\n  }\n\n  function positivePercentage() {\n    return Math.round((good / totalAmount()) * 100);\n  }\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedBackOptions onFeedback={onHandleClick} btnNames={arrFeedback} />\n      </Section>\n      <Section title={\"Statistics\"}>\n        {totalAmount() ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalAmount()}\n            positive={positivePercentage()}\n          />\n        ) : (\n          <Notification notice=\"No feedback given\" />\n        )}\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n\n// const initialState = {\n//   good: 0,\n//   neutral: 0,\n//   bad: 0,\n// // };\n// export default class App extends Component {\n//   state = initialState;\n\n//   onHandleClick = (e) => {\n//     const name = e.target.name;\n//     this.setState(() => ({\n//       [name]: this.state[name] + 1,\n//     }));\n//   };\n\n//   totalAmount = () => {\n//     const { good, neutral, bad } = this.state;\n//     return good + neutral + bad;\n//   };\n\n//   positivePercentage = () => {\n//     const { good } = this.state;\n//     return Math.round((good / this.totalAmount()) * 100);\n//   };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}